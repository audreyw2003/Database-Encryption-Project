--original tables used to create database and start encryption
--name attributes were all dropped after encryption and indexing
--replaced them with encrypted names instead

create table artist (
    artist_id int primary key,
    artist_name varchar(50) not null
);

create table album (
    album_id varchar(50) primary key,
    album_name_encrypt varchar(255) not null,
    album_release_date date not null,
    total_tracks int
);

create table genre (
    genre_id int primary key,
    genre_name varchar(100) not null,
    subgenre_name varchar(100) not null,
    constraint unique_genre_subgenre unique (genre_name, subgenre_name)
);

create table playlist (
    playlist_id varchar(50) primary key,
    playlist_name varchar(255) not null,
    genre_id int,
    foreign key (genre_id) references genre(genre_id)
);

create table track (
    track_id varchar(50) primary key,
    track_name varchar(255) not null,
    energy float,
    tempo float,
    danceability float,
    loudness float,
    liveness float,
    valence float,
    speechiness float,
    instrumentalness float,
    mode int,
    song_key int,
    duration_ms int,
    acousticness float,
    track_popularity int,
    album_id varchar(50),
    playlist_id varchar(50),
    foreign key (album_id) references album(album_id),
    foreign key (playlist_id) references playlist(playlist_id)
);

create table trackartist (
    track_id varchar(50) not null,
    artist_id int not null,
    primary key (track_id, artist_id),
    foreign key (track_id) references track(track_id),
    foreign key (artist_id) references artist(artist_id)
);

create table features (
    feature_id int,
    track_id varchar(50) not null,
    energy float,
    tempo float,
    dancebility float,
    acousticness float,
    instrumentalness float,
    mode int,
    song_key int,
    liveness float,
    loudness float,
    primary key (feature_id, track_id),
    foreign key (track_id) references track(track_id)
);